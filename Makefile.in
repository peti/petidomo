#
# Petidomo Makefile
#

prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libexecdir	= @libexecdir@/petidomo
datadir		= @datadir@/petidomo
sysconfdir	= @sysconfdir@
localstatedir	= @localstatedir@/petidomo
mandir		= @mandir@

CC		= @CC@
AR		= ar
RANLIB		= @RANLIB@
LEX		= @LEX@
YACC		= @YACC@
SHTOOL		= ./etc/shtool

CFLAGS		= @CFLAGS@

CPPFLAGS	= @CPPFLAGS@ @DEFS@ -DSYSCONFDIR=\"$(sysconfdir)\"	   \
		  -DLIBEXECDIR=\"$(libexecdir)\" -DDATADIR=\"$(datadir)\"  \
		  -DLOCALSTATEDIR=\"$(localstatedir)\"
LDFLAGS		= @LDFLAGS@
FLAGS_TO_PASS	= MFLAGS="$(MFLAGS)" CC="$(CC)" AR="$(AR)"		   \
		  RANLIB="$(RANLIB)" LEX="$(LEX)"			   \
		  YACC="$(YACC)" CFLAGS="$(CFLAGS)"			   \
		  CPPFLAGS="$(CPPFLAGS)" LDFLAGS="$(LDFLAGS)"

OBJS		= acl.o archive.o authen.o help.o io.o generate-cookie.o   \
		  filter.o handleacl.o hermes.o index.o config-files.o	   \
		  listserv.o mailer.o members.o parsearray.o password.o	   \
		  rfcparse.o subscribe.o tool.o unsubscribe.o main.o	   \
		  queue-command.o queue-posting.o approve.o address-db.o   \
		  version.o
LIBS		= librfc822/librfc822.a libmpools/libmpools.a              \
		  liblists/liblists.a libargv/libargv.a                    \
		  libconfigfile/libconfigfile.a libtext/libtext.a

.SUFFIXES:
.SUFFIXES:	.c .o

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $<

all: petidomo petidomo.1

petidomo:	$(OBJS) $(LIBS)
	$(CC) $(OBJS) -o $@ $(LDFLAGS) $(LIBS)

petidomo.1:	petidomo.pod
	V=`$(SHTOOL) version -lc -dlong version.c`; \
	sed -e "s;@V@;$$V;g" <petidomo.pod >/tmp/petidomo.pod; \
	pod2man --section=1 --date="$$V" \
	        --center="Petidomo" --release="Petidomo" \
	        /tmp/petidomo.pod >petidomo.1; \
	rm -f /tmp/petidomo.pod

acl.c acl-scan.h:	acl.y
	$(YACC) -d -p acl acl.y
	mv y.tab.c acl.c
	mv y.tab.h acl-scan.h

acl-scan.c:		acl-scan.l acl-scan.h
	$(LEX) -i -Pacl acl-scan.l
	mv lex.acl.c acl-scan.c

acl.c:			acl-scan.c

$(LIBS):
	@subdir=`echo $@ | sed -e 's@/.*@@'`; \
	echo "===> $$subdir"; \
	cd $$subdir && $(MAKE) $(FLAGS_TO_PASS); \
	echo "<=== $$subdir"

install:	all
	$(SHTOOL) mkdir -f -p -m 755 $(bindir)
	$(SHTOOL) mkdir -f -p -m 755 $(sysconfdir)
	$(SHTOOL) mkdir -f -p -m 755 $(localstatedir)/lists
	$(SHTOOL) mkdir -f -p -m 755 $(localstatedir)/ack-queue
	$(SHTOOL) mkdir -f -p -m 755 $(datadir)
	$(SHTOOL) mkdir -f -p -m 755 $(libexecdir)
	$(SHTOOL) mkdir -f -p -m 755 $(mandir)/man1
	$(SHTOOL) install -c -s -m 555 petidomo $(bindir)
	$(SHTOOL) install -c -m 755 petidomo-approve $(bindir)
	$(SHTOOL) install -c -m 755 petidomo-kickout $(bindir)
	$(SHTOOL) install -c -m 644 petidomo.1 $(mandir)/man1/petidomo.1
	$(SHTOOL) install -c -m 644 config/petidomo.conf $(sysconfdir)/petidomo.conf-sample
	$(SHTOOL) install -c -m 644 config/petidomo.acl $(sysconfdir)/petidomo.acl-sample
	$(SHTOOL) install -c -m 444 config/help $(datadir)
	if [ ! -f $(localstatedir)/index ] ; then $(SHTOOL) install -c -m 444 config/index $(localstatedir); fi
	$(SHTOOL) install -c -m 555 filter/insert-name-in-subject.sh $(libexecdir)
	$(SHTOOL) install -c -m 555 filter/pgp-decrypt.sh $(libexecdir)
	$(SHTOOL) install -c -m 555 filter/pgp-encrypt.sh $(libexecdir)
	$(SHTOOL) install -c -m 555 filter/rfc2369.sh $(libexecdir)

install-testlist:
	$(SHTOOL) mkdir -f -p -m 755 $(localstatedir)/lists/testlist
	$(SHTOOL) install -c -m 644 config/list-config $(localstatedir)/lists/testlist/config
	$(SHTOOL) install -c -m 644 config/list-acl $(localstatedir)/lists/testlist/acl
	@rm -f $(localstatedir)/lists/testlist/list
	$(SHTOOL) install -c -m 644 /dev/null $(localstatedir)/lists/testlist/list

clean distclean realclean::
	@for subdir in lib*; do \
	echo "===> $$subdir"; \
	(cd $$subdir && $(MAKE) $(FLAGS_TO_PASS) $@); \
	echo "<=== $$subdir"; \
	done

clean::
	rm -f petidomo
	rm -f petidomo.1
	rm -f $(OBJS)
	rm -f acl-scan.c acl-scan.h acl.c

distclean::	clean
	rm -f config.log config.cache config.status Makefile

realclean::	distclean
	rm -f configure

#   increase or update version information
new-version:
	@V="$(VERSION)"; OPT="-e"; [ ".$$V" != . ] && OPT="-s$$V"; \
	$(SHTOOL) version -lc -n 'Petidomo' -p petidomo_ $$OPT version.c
update-version:
	@OPT="-s`$(SHTOOL) version -lc -dshort version.c`"; \
	$(SHTOOL) version -lc -n 'Petidomo' -p petidomo_ $$OPT version.c

#   roll release or snapshot source distribution tarballs
dist: distclean
	@echo "Rolling RELEASE source distribution tarball"; \
	$(SHTOOL) fixperm *; \
	V=`$(SHTOOL) version -lc -dshort version.c`; \
	$(SHTOOL) tarball \
	    -o petidomo-$$V.tar.gz -d petidomo-$$V -u ossp -g petidomo \
	    -e 'CVS,\.cvsignore,\.configure,ChangeLog*,\.\#.*,*~$$,\.[ao]$$' \
		-c 'gzip -9' .; \
	ls -l petidomo-$$V.tar.gz
snap: distclean
	@echo "Rolling SNAPSHOT source distribution tarball"; \
	$(SHTOOL) fixperm *; \
	D=`date '+%Y%d%m'`; \
	$(SHTOOL) tarball \
	    -o petidomo-SNAP-$$D.tar.gz -d petidomo-SNAP-$$V -u ossp -g petidomo \
	    -e 'CVS,\.cvsignore,\.configure,ChangeLog*,\.\#.*,*~$$,\.[ao]$$' \
		-c 'gzip -9' .; \
	ls -l petidomo-SNAP-$$D.tar.gz

# Dependencies

acl.o: libtext/text.h petidomo.h acl-scan.c acl-scan.h
acl-scan.o: acl-scan.h
address-db.o: libtext/text.h petidomo.h
approve.o: petidomo.h
archive.o: libtext/text.h petidomo.h
authen.o: libtext/text.h petidomo.h
config-files.o: libtext/text.h liblists/lists.h libconfigfile/configfile.h
config-files.o: petidomo.h
filter.o: petidomo.h
generate-cookie.o: petidomo.h
handleacl.o: petidomo.h
help.o: libtext/text.h petidomo.h
hermes.o: libtext/text.h petidomo.h
index.o: libtext/text.h petidomo.h
io.o: petidomo.h
listserv.o: libtext/text.h petidomo.h
mailer.o: libtext/text.h petidomo.h
main.o: libargv/argv.h libtext/text.h petidomo.h version.c
members.o: libtext/text.h petidomo.h
parsearray.o: petidomo.h
password.o: petidomo.h
queue-command.o: libtext/text.h petidomo.h
queue-posting.o: libtext/text.h petidomo.h
rfcparse.o: librfc822/rfc822.h libtext/text.h petidomo.h
subscribe.o: libtext/text.h petidomo.h
tool.o: libtext/text.h petidomo.h
unsubscribe.o: libtext/text.h petidomo.h
